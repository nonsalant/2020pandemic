localStorageInit();

render_stuff();
//let auto_refresh = setInterval(render_stuff, 3000);

function render_stuff() {
  render_hero();
  render_blocks();
}

function toggle_auto_refresh(checked) {
  if (checked) {
    auto_refresh = setInterval(render_stuff, 3000);
    document.querySelectorAll('.legend')[0].style.backgroundColor='#efef1144';
    document.querySelector('#Global').style.backgroundColor="hsla(60, 60%, 85%, 0.53)";
  } else {
    clearInterval(auto_refresh);
    document.querySelectorAll('.legend')[0].style.backgroundColor='#cccccc44';
    document.querySelector('#Global').style.backgroundColor="hsla(60, 0%, 95%, 0.53)";
  }
}

function render_hero() {
  let url = "https://coronavirus-19-api.herokuapp.com/all/";
  fetch(url)
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      let recovered = Number(data.recovered.toFixed(0));
      let deaths = Number(data.deaths.toFixed(0));
      let cases = Number(data.cases.toFixed(0));

      let percentage = ((recovered + deaths) / cases).toFixed(2) * 100;
      let percentageEmpty = 100 - percentage;

      document.getElementById("hero").innerHTML = `
      <style>
      #virus:before {
        /* Grab Google image graph (pie chart) */
        background: url("https://chart.googleapis.com/chart?cht=p&chd=t:${percentage},${percentageEmpty}&chs=200x200&chco=DCD3C0,ffefcc") center center no-repeat;
        background-size: contain;
        opacity: .90;
        content: "";
        position: absolute;
        width: 1.5em;
        height: 1.5em;
        border-radius: 100%; border:0; padding:0;
        display: block;
      }
      </style>

      <div class="percentage-bar" style="width:${percentage}%;">

      <span>
        ${percentage}%
      </span>

    </div>

    <small class="percentage-empty">
        ${percentageEmpty}% ü¶† ACTIVE CASES
    </small>
    `;
    });
}

function render_blocks() {
  let blocks = document.getElementsByClassName("block");
  for (let i = 0; i < blocks.length; i++) {
    render(blocks[i].id);
    let blocks_array=[];
    blocks_array[i]=blocks[i].id;
    console.log(blocks_array[i]);
  }

}

function render(id) {
  let url = ""; //let txt = '{"cases":422966,"deaths":18906,"recovered":109143}';
  if (id === "Global") {
    url = "https://coronavirus-19-api.herokuapp.com/all/";
  } else {
    url = "https://coronavirus-19-api.herokuapp.com/countries/" + id;
  }

  fetch(url)
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      let recovered = Number(data.recovered.toFixed(0));
      let deaths = Number(data.deaths.toFixed(0));
      let cases = Number(data.cases.toFixed(0));
      let cr = ((recovered + deaths) / cases).toFixed(2);
      function color_change(cr) {
        let colorClass = "gray";
        if (Number(cr) < 0.1) {
          colorClass = "red";
        }
        if (Number(cr) > 0.3) {
          colorClass = "green";
        }
        return colorClass;
      }

      document.getElementById(id).innerHTML = `
        <button class="close" onclick="remove_country(this)" style="display:none;">
          ‚ùå
        </button>
        <!--<a href="${url}" title="View raw data">-->
          ${unescape(id)}:
        <!--</a>-->&nbsp;
        (
        <b style="color:green">${recovered}</b>
        +
        <b class="deaths">${deaths}</b> )
        /
        <b style="color:red">${cases}</b>
        =
        <b class="${color_change(cr)}">
          ${cr}
        </b>
        <span style="width:1em; text-align:center;">
          ${flag_emoji(id)}
        </span>
      `;
    });
}




function toggle_close_buttons(element) {
  let close_buttons = document.querySelectorAll('.close');

  if (typeof(close_buttons[0]) != 'undefined' && close_buttons != null) {
    if (close_buttons[0].style.display == 'none') {

      if(document.getElementById('autorefresh').checked) {
        document.getElementById('autorefresh').checked=false;
        toggle_auto_refresh(false);
      }

      element.innerHTML = '&nbsp;&nbsp;&nbsp;Done deleting.&nbsp;&nbsp;';
      for (let i=0; i<close_buttons.length; i++) {
        close_buttons[i].style.display = 'block';
      }
    } else if (close_buttons[0].style.display == 'block') {
      element.innerHTML = 'Delete countries‚Ä¶';

      for (let i=0; i<close_buttons.length; i++) {
        close_buttons[i].style.display = 'none';
      }
    }
  } else {
    element.innerHTML = 'Delete countries‚Ä¶';

  }

}



document.querySelector('#country-list-choice').addEventListener('change', (event) => {
  let new_country = document.getElementById('country-list-choice').value;
  new_country = new_country.split(' ');
  new_country.shift();
  new_country = new_country.join(' ');
  if (new_country && !document.getElementById(escape(new_country)) ) {
    console.log(new_country +" added.");
    add_country(new_country);
  } else if ( document.getElementById(escape(new_country)) ) {
    alert(new_country+' is already shown.')
  }
  document.getElementById('country-list-choice').value = '';
});

// //country_list();
// function country_list() {
//   let url = "https://coronavirus-19-api.herokuapp.com/countries/";
//   fetch(url)
//     .then((response) => {
//     return response.json();
//   })
//     .then((data) => {
//     let str = '';
//     for (let i=0; i<data.length; i++) {
//       str+=flag_emoji(escape(data[i].country))+' '+data[i].country+',';
//     }
//     console.log(str);
//     //"üá∫üá∏ USA,üáÆüáπ Italy,üá™üá∏ Spain,üá©üá™ Germany,üá´üá∑ France,üáÆüá∑ Iran,üá¨üáß UK,üá®üá≠ Switzerland,üáßüá™ Belgium,üá≥üá± Netherlands,üáπüá∑ Turkey,üá∞üá∑ S. Korea,üá¶üáπ Austria,üá®üá¶ Canada,üáµüáπ Portugal,üáÆüá± Israel,üáßüá∑ Brazil,üá≥üá¥ Norway,üá¶üá∫ Australia,üá∏üá™ Sweden,üá®üáø Czechia,üáÆüá™ Ireland,üá≤üáæ Malaysia,üá©üá∞ Denmark,üá®üá± Chile,üáµüá± Poland,üá±üá∫ Luxembourg,üá™üá® Ecuador,üá∑üá¥ Romania,üáØüáµ Japan,üá∑üá∫ Russia,üáµüá∞ Pakistan,üáµüá≠ Philippines,üáπüá≠ Thailand,üá∏üá¶ Saudi Arabia,üáÆüá© Indonesia,üá´üáÆ Finland,üáøüá¶ South Africa,üáÆüá≥ India,üá¨üá∑ Greece,üáÆüá∏ Iceland,üá≤üáΩ Mexico,üáµüá¶ Panama,üáµüá™ Peru,üá©üá¥ Dominican Republic,üá∏üá¨ Singapore,üá¶üá∑ Argentina,üá®üá¥ Colombia,üá≠üá∑ Croatia,üá∑üá∏ Serbia,üá∏üáÆ Slovenia,üá™üá™ Estonia,üö¢ Diamond Princess,üá∂üá¶ Qatar,üá™üá¨ Egypt,üá≠üá∞ Hong Kong,üáÆüá∂ Iraq,üá¶üá™ UAE,üá≥üáø New Zealand,üá©üáø Algeria,üá≤üá¶ Morocco,üáßüá≠ Bahrain,üá±üáπ Lithuania,üá¶üá≤ Armenia,üá∫üá¶ Ukraine,üá≠üá∫ Hungary,üá±üáß Lebanon,üá±üáª Latvia,üáßüá¨ Bulgaria,üáßüá¶ Bosnia and Herzegovina,üá∏üá∞ Slovakia,üá¶üá© Andorra,üá®üá∑ Costa Rica,üáπüá≥ Tunisia,üá∫üáæ Uruguay,üáπüáº Taiwan,üá∞üáø Kazakhstan,üá≤üá© Moldova,üá≤üá∞ North Macedonia,üá¶üáø Azerbaijan,üáØüá¥ Jordan,üá∞üáº Kuwait,üáßüá´ Burkina Faso,üá∏üá≤ San Marino,üá®üáæ Cyprus,&nbsp;&nbsp;&nbsp;&thinsp; R√©union,üá¶üá± Albania,üáªüá≥ Vietnam,üá¥üá≤ Oman,üá¶üá´ Afghanistan,üá®üá∫ Cuba,üá´üá¥ Faeroe Islands,üá®üáÆ Ivory Coast,üá∏üá≥ Senegal,üá≤üáπ Malta,üá¨üá≠ Ghana,üáßüáæ Belarus,üá∫üáø Uzbekistan,&nbsp;&nbsp;&nbsp;&thinsp; Channel Islands,üá®üá≤ Cameroon,üá≠üá≥ Honduras,üáªüá™ Venezuela,üá≤üá∫ Mauritius,üáßüá≥ Brunei,üá±üá∞ Sri Lanka,üáµüá∏ Palestine,üá≥üá¨ Nigeria,üá∞üá≠ Cambodia,üá¨üáµ Guadeloupe,üá¨üá™ Georgia,üáßüá¥ Bolivia,üá∞üá¨ Kyrgyzstan,üá≤üá∂ Martinique,üá≤üá™ Montenegro,&nbsp;&nbsp;&nbsp;&thinsp; Trinidad and Tobago,üáæüáπ Mayotte,üá®üá© DRC,üá∑üáº Rwanda,üá¨üáÆ Gibraltar,üáµüáæ Paraguay,üá±üáÆ Liechtenstein,üá∞üá™ Kenya,üá¶üáº Aruba,üáßüá© Bangladesh,üá≤üá® Monaco,üáÆüá≤ Isle of Man,üá¨üá´ French Guiana,üá≤üá¨ Madagascar,üá≤üá¥ Macao,üá¨üáπ Guatemala,üáØüá≤ Jamaica,üáµüá´ French Polynesia,üáøüá≤ Zambia,üáßüáß Barbados,üá∫üá¨ Uganda,üáπüá¨ Togo,üá∏üáª El Salvador,üá≤üá± Mali,üá™üáπ Ethiopia,üá≥üá™ Niger,üáßüá≤ Bermuda,üá¨üá≥ Guinea,üá®üá¨ Congo,üáπüáø Tanzania,üá©üáØ Djibouti,üá≤üáª Maldives,üá≤üá´ Saint Martin,üá≠üáπ Haiti,üá≥üá® New Caledonia,üáßüá∏ Bahamas,üá≤üá≤ Myanmar,üá∞üáæ Cayman Islands,üá¨üá∂ Equatorial Guinea,üá™üá∑ Eritrea,üá≤üá≥ Mongolia,&nbsp;&nbsp;&nbsp;&thinsp; Cura√ßao,üá©üá≤ Dominica,üá≥üá¶ Namibia,üá¨üá± Greenland,üá∏üáæ Syria,üá¨üá© Grenada,üá±üá® Saint Lucia,üá∏üáø Eswatini,üá¨üáæ Guyana,üá¨üáº Guinea-Bissau,üá±üá¶ Laos,üá±üáæ Libya,üá≤üáø Mozambique,üá∏üá® Seychelles,üá∏üá∑ Suriname,üá¶üá¥ Angola,üá¨üá¶ Gabon,üáøüáº Zimbabwe,üá¶üá¨ Antigua and Barbuda,üá∞üá≥ Saint Kitts and Nevis,üá∏üá© Sudan,üá®üáª Cabo Verde,üáßüáØ Benin,üáªüá¶ Vatican City,üáßüá± St. Barth,üá∏üáΩ Sint Maarten,üá≥üáµ Nepal,üáπüá© Chad,üá´üáØ Fiji,üá≤üá∑ Mauritania,üá≤üá∏ Montserrat,üáπüá® Turks and Caicos,üá¨üá≤ Gambia,üá≥üáÆ Nicaragua,üáßüáπ Bhutan,üáßüáø Belize,üáßüáº Botswana,üá®üá´ CAR,üá±üá∑ Liberia,üá∏üá¥ Somalia,üö¢ MS Zaandam,üá¶üáÆ Anguilla,üáªüá¨ British Virgin Islands,üáµüá¨ Papua New Guinea,üáªüá® St. Vincent Grenadines,üáπüá± Timor-Leste,üá®üá≥ China,"
//   });
// }


// localStorage

function localStorageInit() {
  let pandemicSavedCountries = localStorage.getItem('pandemicSavedCountries');
  if (!pandemicSavedCountries || pandemicSavedCountries === '{}') {
    let aaa = document.querySelectorAll('.country-stats .block');
    let aa = '';
    for (let i=0; i<aaa.length; i++) {
      aa += aaa[i].id;
      if (i<(aaa.length-1)) {
          aa+=',';
      }
    }
    localStorage.setItem('pandemicSavedCountries', aa);
  } else {
    let bbb = pandemicSavedCountries.split(',');
    let bb='';
    for (let i=0; i<bbb.length; i++) {
      bb+=`
      <div id="${bbb[i]}" class="block"></div>
      `;
    }
    document.querySelector('.country-stats').innerHTML = bb;
  }
}

function remove_country(el) {
  el.parentNode.remove();
  console.log(unescape(el.parentNode.id)+' removed.')

  let pandemicSavedCountries = localStorage.getItem('pandemicSavedCountries');
  let bbb = pandemicSavedCountries.split(',');
  let bb='';
  for (let i=0; i<bbb.length; i++) {
    if(bbb[i]==el.parentNode.id) {
        bbb.splice(i, 1);
       }
  }
  localStorage.setItem( 'pandemicSavedCountries', bbb.join() );
}

// add_country('Diamond Princess');
function add_country(country) {
  document.querySelector('.country-stats').innerHTML += `
    <div id="${escape(country)}" class="block"></div>
  `;
  render(escape(country));

  let pandemicSavedCountries = localStorage.getItem('pandemicSavedCountries');
  let bbb = pandemicSavedCountries.split(',');
  bbb.push(escape(country));
  localStorage.setItem( 'pandemicSavedCountries', bbb.join() );
  //console.log(bbb.join());
}


//https://medium.com/@mhagemann/the-ultimate-way-to-slugify-a-url-string-in-javascript-b8e4a0d849e1
function slugify(string) {
  const a = '√†√°√¢√§√¶√£√•ƒÅƒÉƒÖ√ßƒáƒçƒëƒè√®√©√™√´ƒìƒóƒôƒõƒü«µ·∏ß√Æ√Ø√≠ƒ´ƒØ√¨≈Ç·∏ø√±≈Ñ«π≈à√¥√∂√≤√≥≈ì√∏≈ç√µ·πï≈ï≈ô√ü≈õ≈°≈ü»ô≈•»õ√ª√º√π√∫≈´«ò≈Ø≈±≈≥·∫É·∫ç√ø√Ω≈æ≈∫≈º¬∑/_,:;'
  const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnooooooooprrsssssttuuuuuuuuuwxyyzzz------'
  const p = new RegExp(a.split('').join('|'), 'g')

  return string.toString().toLowerCase()
    .replace(/\s+/g, '-') // Replace spaces with -
    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters
    .replace(/&/g, '-and-') // Replace & with 'and'
    .replace(/[^\w\-]+/g, '') // Remove all non-word characters
    .replace(/\-\-+/g, '-') // Replace multiple - with single -
    .replace(/^-+/, '') // Trim - from start of text
    .replace(/-+$/, '') // Trim - from end of text
}

// flag_emoji function by Stefan Matei
function flag_emoji(country) {
  switch (country) {
    case "Romania":
      return "üá∑üá¥";
    case "USA":
      return "üá∫üá∏";
    case "Global":
      return "üåé";
    case "China":
      return "üá®üá≥";
    case "Italy":
      return "üáÆüáπ";
    case "Spain":
      return "üá™üá∏";
    case "S.%20Korea":
      return "üá∞üá∑";
    case "Moldova":
      return "üá≤üá©";
    case "Bulgaria":
      return "üáßüá¨";
    case "Switzerland":
      return "üá®üá≠";
    case "UK":
      return "üá¨üáß";
    case "Iran":
      return "üáÆüá∑";
    case "France":
      return "üá´üá∑";
    case "Germany":
      return "üá©üá™";
    case "Japan":
      return "üáØüáµ";
    case "Belgium":
      return "üáßüá™";
    case "Netherlands":
      return "üá≥üá±";
    case "Turkey":
      return "üáπüá∑";
    case "Austria":
      return "üá¶üáπ";
    case "Canada":
      return "üá®üá¶";
    case "Portugal":
      return "üáµüáπ";
    case "Norway":
      return "üá≥üá¥";
    case "Brazil":
      return "üáßüá∑";
    case "Israel":
      return "üáÆüá±";
    case "Australia":
      return "üá¶üá∫";
    case "Sweden":
      return "üá∏üá™";
    case "Czechia":
      return "üá®üáø";
    case "Malaysia":
      return "üá≤üáæ";
    case "Ireland":
      return "üáÆüá™";
    case "Denmark":
      return "üá©üá∞";
    case "Chile":
      return "üá®üá±";
    case "Luxembourg":
      return "üá±üá∫";
    case "Poland":
      return "üáµüá±";
    case "Ecuador":
      return "üá™üá®";
    case "Russia":
      return "üá∑üá∫";
    case "Pakistan":
      return "üáµüá∞";
    case "Philippines":
      return "üáµüá≠";
    case "Thailand":
      return "üáπüá≠";
    case "Saudi%20Arabia":
      return "üá∏üá¶";
    case "Indonesia":
      return "üáÆüá©";
    case "Finland":
      return "üá´üáÆ";
    case "South%20Africa":
      return "üáøüá¶";
    case "Greece":
      return "üá¨üá∑";
    case "Iceland":
      return "üáÆüá∏";
    case "India":
      return "üáÆüá≥";
    case "Mexico":
      return "üá≤üáΩ";
    case "Panama":
      return "üáµüá¶";
    case "Dominican%20Republic":
      return "üá©üá¥";
    case "Singapore":
      return "üá∏üá¨";
    case "Peru":
      return "üáµüá™";
    case "Argentina":
      return "üá¶üá∑";
    case "Croatia":
      return "üá≠üá∑";
    case "Serbia":
      return "üá∑üá∏";
    case "Slovenia":
      return "üá∏üáÆ";
    case "Estonia":
      return "üá™üá™";
    case "Diamond%20Princess":
      return "üö¢";
    case "Colombia":
      return "üá®üá¥";
    case "Qatar":
      return "üá∂üá¶";
    case "Hong%20Kong":
      return "üá≠üá∞";
    case "UAE":
      return "üá¶üá™";
    case "Egypt":
      return "üá™üá¨";
    case "New%20Zealand":
      return "üá≥üáø";
    case "Algeria":
      return "üá©üáø";
    case "Iraq":
      return "üáÆüá∂";
    case "Morocco":
      return "üá≤üá¶";
    case "Bahrain":
      return "üáßüá≠";
    case "Lithuania":
      return "üá±üáπ";
    case "Armenia":
      return "üá¶üá≤";
    case "Ukraine":
      return "üá∫üá¶";
    case "Hungary":
      return "üá≠üá∫";
    case "Lebanon":
      return "üá±üáß";
    case "Latvia":
      return "üá±üáª";
    case "Bosnia%20and%20Herzegovina":
      return "üáßüá¶";
    case "Slovakia":
      return "üá∏üá∞";
    case "Andorra":
      return "üá¶üá©";
    case "Costa%20Rica":
      return "üá®üá∑";
    case "Tunisia":
      return "üáπüá≥";
    case "Uruguay":
      return "üá∫üáæ";
    case "Taiwan":
      return "üáπüáº";
    case "Kazakhstan":
      return "üá∞üáø";
    case "North%20Macedonia":
      return "üá≤üá∞";
    case "Azerbaijan":
      return "üá¶üáø";
    case "Kuwait":
      return "üá∞üáº";
    case "Jordan":
      return "üáØüá¥";
    case "San%20Marino":
      return "üá∏üá≤";
    case "Cyprus":
      return "üá®üáæ";
    case "R√©union":
      return "üá∑üá™";
    case "Albania":
      return "üá¶üá±";
    case "Burkina%20Faso":
      return "üáßüá´";
    case "Vietnam":
      return "üáªüá≥";
    case "Oman":
      return "üá¥üá≤";
    case "Afghanistan":
      return "üá¶üá´";
    case "Cuba":
      return "üá®üá∫";
    case "Faeroe%20Islands":
      return "üá´üá¥";
    case "Faroe%20Islands":
      return "üá´üá¥";
    case "Ivory%20Coast":
      return "üá®üáÆ";
    case "Senegal":
      return "üá∏üá≥";
    case "Malta":
      return "üá≤üáπ";
    case "Ghana":
      return "üá¨üá≠";
    case "Belarus":
      return "üáßüáæ";
    case "Uzbekistan":
      return "üá∫üáø";
    case "Channel%20Islands":
      return "&nbsp;&nbsp;&nbsp;&thinsp;";
    case "Cameroon":
      return "üá®üá≤";
    case "Honduras":
      return "üá≠üá≥";
    case "Venezuela":
      return "üáªüá™";
    case "Mauritius":
      return "üá≤üá∫";
    case "Brunei":
      return "üáßüá≥";
    case "Sri%20Lanka":
      return "üá±üá∞";
    case "Palestine":
      return "üáµüá∏";
    case "Nigeria":
      return "üá≥üá¨";
    case "Cambodia":
      return "üá∞üá≠";
    case "Guadeloupe":
      return "üá¨üáµ";
    case "Georgia":
      return "üá¨üá™";
    case "Bolivia":
      return "üáßüá¥";
    case "Kyrgyzstan":
      return "üá∞üá¨";
    case "Martinique":
      return "üá≤üá∂";
    case "Montenegro":
      return "üá≤üá™";
    case "Trinidad%and%Tobago":
      return "üáπüáπ";
    case "Mayotte":
      return "üáæüáπ";
    case "DRC":
      return "üá®üá©";
    case "Rwanda":
      return "üá∑üáº";
    case "Gibraltar":
      return "üá¨üáÆ";
    case "Paraguay":
      return "üáµüáæ";
    case "Liechtenstein":
      return "üá±üáÆ";
    case "Kenya":
      return "üá∞üá™";
    case "Aruba":
      return "üá¶üáº";
    case "Bangladesh":
      return "üáßüá©";
    case "Isle%20of%20Man":
      return "üáÆüá≤";
    case "Monaco":
      return "üá≤üá®";
    case "French%20Guiana":
      return "üá¨üá´";
    case "Madagascar":
      return "üá≤üá¨";
    case "Macao":
      return "üá≤üá¥";
    case "Guatemala":
      return "üá¨üáπ";
    case "Jamaica":
      return "üáØüá≤";
    case "French%20Polynesia":
      return "üáµüá´";
    case "Zambia":
      return "üáøüá≤";
    case "Barbados":
      return "üáßüáß";
    case "Uganda":
      return "üá∫üá¨";
    case "Togo":
      return "üáπüá¨";
    case "El%20Salvador":
      return "üá∏üáª";
    case "Mali":
      return "üá≤üá±";
    case "Ethiopia":
      return "üá™üáπ";
    case "Niger":
      return "üá≥üá™";
    case "Bermuda":
      return "üáßüá≤";
    case "Guinea":
      return "üá¨üá≥";
    case "Congo":
      return "üá®üá¨";
    case "Tanzania":
      return "üáπüáø";
    case "Djibouti":
      return "üá©üáØ";
    case "Maldives":
      return "üá≤üáª";
    case "Saint%20Martin":
      return "üá≤üá´";
    case "Haiti":
      return "üá≠üáπ";
    case "New%20Caledonia":
      return "üá≥üá®";
    case "Bahamas":
      return "üáßüá∏";
    case "Myanmar":
      return "üá≤üá≤";
    case "Cayman%20Islands":
      return "üá∞üáæ";
    case "Equatorial%20Guinea":
      return "üá¨üá∂";
    case "Eritrea":
      return "üá™üá∑";
    case "Mongolia":
      return "üá≤üá≥";
    case "Cura√ßao":
      return "üá®üáº";
    case "Dominica":
      return "üá©üá≤";
    case "Namibia":
      return "üá≥üá¶";
    case "Greenland":
      return "üá¨üá±";
    case "Syria":
      return "üá∏üáæ";
    case "Grenada":
      return "üá¨üá©";
    case "Saint%20Lucia":
      return "üá±üá®";
    case "Eswatini":
      return "üá∏üáø";
    case "Guyana":
      return "üá¨üáæ";
    case "Guinea-Bissau":
      return "üá¨üáº";
    case "Laos":
      return "üá±üá¶";
    case "Libya":
      return "üá±üáæ";
    case "Mozambique":
      return "üá≤üáø";
    case "Seychelles":
      return "üá∏üá®";
    case "Suriname":
      return "üá∏üá∑";
    case "Angola":
      return "üá¶üá¥";
    case "Gabon":
      return "üá¨üá¶";
    case "Zimbabwe":
      return "üáøüáº";
    case "Antigua%20and%20Barbuda":
      return "üá¶üá¨";
    case "Saint%20Kitts%20and%20Nevis":
      return "üá∞üá≥";
    case "Sudan":
      return "üá∏üá©";
    case "Cabo%20Verde":
      return "üá®üáª";
    case "Cape%20Verde":
      return "üá®üáª";
    case "Benin":
      return "üáßüáØ";
    case "Vatican%20City":
      return "üáªüá¶";
    case "St.%20Barth":
      return "üáßüá±";
    case "Sint%20Maarten":
      return "üá∏üáΩ";
    case "Nepal":
      return "üá≥üáµ";
    case "Chad":
      return "üáπüá©";
    case "Fiji":
      return "üá´üáØ";
    case "Mauritania":
      return "üá≤üá∑";
    case "Montserrat":
      return "üá≤üá∏";
    case "Turks%20and%20Caicos":
      return "üáπüá®";
    case "Gambia":
      return "üá¨üá≤";
    case "Nicaragua":
      return "üá≥üáÆ";
    case "Bhutan":
      return "üáßüáπ";
    case "Belize":
      return "üáßüáø";
    case "CAR":
      return "üá®üá´";
    case "Liberia":
      return "üá±üá∑";
    case "Somalia":
      return "üá∏üá¥";
    case "MS%20Zaandam":
      return "üö¢";
    case "Anguilla":
      return "üá¶üáÆ";
    case "British%20Virgin%20Islands":
      return "üáªüá¨";
    case "Papua%20New%20Guinea":
      return "üáµüá¨";
    case "St.%20Vincent%20Grenadines":
      return "üáªüá®";
    case "Timor-Leste":
      return "üáπüá±";
    case "Botswana":
      return "üáßüáº";
  }
  return "&nbsp;&nbsp;&nbsp;&thinsp;";
}
