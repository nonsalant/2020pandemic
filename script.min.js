let links=document.links;for(let e=0,a=links.length;e<a;e++)links[e].hostname!=window.location.hostname&&(links[e].target="_blank",links[e].rel="noopener");function render_stuff(){render_hero(),render_blocks(),fetch("//www.cloudflare.com/cdn-cgi/trace").then(e=>e.text()).then(e=>{let a=e.split("\n")[8].split("loc=")[1];"US"==a&&(a="USA"),a=getCountryName(a),document.getElementById("hero-local").id="hero-"+a,render_hero("hero-"+a)})}function toggle_auto_refresh(e){e?(auto_refresh=setInterval(render_stuff,3e3),document.querySelectorAll(".legend")[0].style.backgroundColor="#F3F3B6",document.querySelector("#Global")&&(document.querySelector("#Global").style.backgroundColor="hsla(60, 60%, 85%, 0.53)")):(clearInterval(auto_refresh),document.querySelectorAll(".legend")[0].style.backgroundColor="rgba(245, 245, 245, 1)",document.querySelector("#Global")&&(document.querySelector("#Global").style.backgroundColor="hsla(60, 0%, 95%, 0.53)"))}function render_hero(e="hero-global"){let a,n;"hero-global"==e?(n="Global",a="https://coronavirus-19-api.herokuapp.com/all/"):e.startsWith("hero-")&&(a="https://coronavirus-19-api.herokuapp.com/countries/"+(n=e.split("hero-")[1].replace(/ /g,"%20"))),fetch(a).then(e=>e.json()).then(a=>{let r,t=Number(a.recovered.toFixed(0)),s=Number(a.deaths.toFixed(0)),o=Number(a.cases.toFixed(0)),i=((t+s)/o*100).toFixed(0),u=100-i,c=(t+s)/o;c.toFixed(2);r="Global"==n?`\n        <style>\n        .virus::before {\n          /* Grab Google image graph (pie chart) */\n          background: url("https://chart.googleapis.com/chart?cht=p&chd=t:${i},${u}&chs=200x200&chco=DCD3C0,ffefcc") center center no-repeat;\n          background-size: contain;\n          opacity: .90;\n          content: "";\n          position: absolute;\n          width: 1.5em;\n          height: 1.5em;\n          border-radius: 100%; border:0; padding:0;\n          display: block;\n        }\n\n        #hero-global-label::before {\n          content: "🌎 ";\n        }\n        </style>\n        `:`\n        <style>\n        #hero-local-label::before {\n          content: "${flag_emoji(n)} ";\n        }\n        #hero-local-label::after {\n          content: " in ${n}:";\n        }\n        <style>\n        `,document.getElementsByTagName("body")[0].innerHTML+=r,document.getElementById(e).innerHTML=`\n      <div class="percentage-bar" style="width:${i}%;\n        background: var(--grain-pattern) repeat scroll center center rgba(187, 187, 187, 0.4);">\n        <button class="no-button-styles has-tooltip-right"\n        style="cursor: default !important;"\n        data-tooltip="C. RATIO = ${c.toFixed(4)}"\n        >\n        ${i}%\n        </button>\n      </div>\n      <small class="percentage-empty">\n          ${u}% 🦠 ACTIVE CASES\n      </small>\n      `})}function render_blocks(){let e=document.getElementsByClassName("block");for(let a=0;a<e.length;a++){render(e[a].id),e[a].id}}function render(e){if(!e)return;let a="";a="Global"===e?"https://coronavirus-19-api.herokuapp.com/all/":"https://coronavirus-19-api.herokuapp.com/countries/"+e,fetch(a).then(e=>e.json()).then(a=>{let n,r,t,s,o;n=a.recovered?Number(a.recovered.toFixed(0)):0,r=a.deaths?Number(a.deaths.toFixed(0)):0,a.cases?(s=(n+r)/(t=Number(a.cases.toFixed(0))),o=((n+r)/t*100).toFixed(0)):(t=0,s=0,o=0);let i=s.toFixed(2);document.getElementById(e).innerHTML=`\n      <div class="block-data">\n          <button class="close" onclick="remove_country(this)" style="display:none;">\n            ❌\n          </button>\n          <button class="country-name has-tooltip-right" \n          data-tooltip="Cases per 1 million: ${a.casesPerOneMillion} \n  Deaths per 1 million: ${a.deathsPerOneMillion}"\n          >\n            ${unescape(e)}:\n          </button>&nbsp;\n          ( \n          <button \n          data-tooltip="Tests per 1 million: ${a.testsPerOneMillion}"\n         class="recovered has-tooltip-bottom" style="color:green">${n}</button>\n          +\n          <button \n          data-tooltip="Deaths today: ${a.todayDeaths}"\n          class="deaths has-tooltip-bottom">${r}</button> ) \n          /\n          <button \n          data-tooltip="Cases today: ${a.todayDeaths}"\n          class="cases has-tooltip-bottom" style="color:red">${t}</button> \n          = \n          <button \n          data-tooltip="${s.toFixed(3)} (${o}% )"\n          class="c-ratio-wrapper has-tooltip-bottom">\n            <b class="c-ratio ${function(e){let a="gray";return Number(e)<.1&&(a="red"),Number(e)>.3&&(a="green"),a}(i)}">\n              ${i}\n            </b>\n          </button>\n          <span class="flag" style="width:1em; text-align:center;">\n            ${flag_emoji(e)}\n          </span>\n      </div> \x3c!-- /.block-data --\x3e\n      `}).then(()=>{sortList()})}function sortList(e=".cases",a=!1){let n,r,t,s;for(r=!0,a&&stop_auto_refresh();r;){for(r=!1,t=document.querySelectorAll(".country-stats .block:not(#Global)"),n=0;n<t.length-1;n++)if(s=!1,t[n].querySelector(e)&&t[n+1].querySelector(e)&&Number(t[n].querySelector(e).innerHTML)<Number(t[n+1].querySelector(e).innerHTML)){s=!0;break}s&&(t[n].parentNode.insertBefore(t[n+1],t[n]),r=!0)}}function stop_auto_refresh(){document.getElementById("autorefresh").checked&&(document.getElementById("autorefresh").checked=!1,toggle_auto_refresh(!1))}function toggle_close_buttons(e){let a=document.querySelectorAll(".close");if(a)if(void 0!==a[0]&&null!=a){if("none"==a[0].style.display){stop_auto_refresh(),e.innerHTML="&nbsp;&nbsp;&nbsp;Done deleting.&nbsp;&nbsp;";for(let e=0;e<a.length;e++)a[e].style.display="block"}else if("block"==a[0].style.display){e.innerHTML="Delete countries…";for(let e=0;e<a.length;e++)a[e].style.display="none"}}else e.innerHTML="Delete countries…"}function localStorageInit(){let e=localStorage.getItem("pandemicSavedCountries");if(e&&"{}"!==e){let a=e.split(","),n="";for(let e=0;e<a.length;e++)n+=`\n      <div id="${a[e]}" class="block"></div>\n      `;document.querySelector(".country-stats").innerHTML=n}else{let e=document.querySelectorAll(".country-stats .block"),a="";for(let n=0;n<e.length;n++)a+=e[n].id,n<e.length-1&&e[n].id&&""!==e[n].id&&(a+=",");localStorage.setItem("pandemicSavedCountries",a)}}function remove_all_countries(){document.querySelector(".country-stats").innerHTML="",localStorage.setItem("pandemicSavedCountries","")}function add_all_countries(){let e=document.querySelectorAll("#country-list option");remove_all_countries();for(let a=0;a<e.length;a++){let n=e[a].value;(n=n.split(" ")).shift(),(n=n.join(" "))&&!document.getElementById(escape(n))?(console.log(n+" added."),add_country(n,!1)):document.getElementById(escape(n))&&alert(n+" is already shown.")}}function remove_country(e){e.parentNode.parentNode.remove(),console.log(unescape(e.parentNode.parentNode.id)+" removed.");let a=localStorage.getItem("pandemicSavedCountries").split(",");for(let n=0;n<a.length;n++)a[n]==e.parentNode.parentNode.id&&a.splice(n,1);localStorage.setItem("pandemicSavedCountries",a.join())}function add_country(e){document.querySelector(".country-stats").innerHTML+=`\n    <div id="${escape(e)}" class="block"></div>\n  `,render(escape(e));let a=[];if(null===localStorage.getItem("pandemicSavedCountries"))a=[e=escape(e)];else{(a=localStorage.getItem("pandemicSavedCountries").split(",")).push(escape(e))}localStorage.setItem("pandemicSavedCountries",a.join())}function flag_emoji(e){switch(e){case"Romania":return"🇷🇴";case"USA":return"🇺🇸";case"Global":return"🌎";case"China":return"🇨🇳";case"Italy":return"🇮🇹";case"Spain":return"🇪🇸";case"S.%20Korea":return"🇰🇷";case"Moldova":return"🇲🇩";case"Bulgaria":return"🇧🇬";case"Switzerland":return"🇨🇭";case"UK":return"🇬🇧";case"Iran":return"🇮🇷";case"France":return"🇫🇷";case"Germany":return"🇩🇪";case"Japan":return"🇯🇵";case"Belgium":return"🇧🇪";case"Netherlands":return"🇳🇱";case"Turkey":return"🇹🇷";case"Austria":return"🇦🇹";case"Canada":return"🇨🇦";case"Portugal":return"🇵🇹";case"Norway":return"🇳🇴";case"Brazil":return"🇧🇷";case"Israel":return"🇮🇱";case"Australia":return"🇦🇺";case"Sweden":return"🇸🇪";case"Czechia":return"🇨🇿";case"Malaysia":return"🇲🇾";case"Ireland":return"🇮🇪";case"Denmark":return"🇩🇰";case"Chile":return"🇨🇱";case"Luxembourg":return"🇱🇺";case"Poland":return"🇵🇱";case"Ecuador":return"🇪🇨";case"Russia":return"🇷🇺";case"Pakistan":return"🇵🇰";case"Philippines":return"🇵🇭";case"Thailand":return"🇹🇭";case"Saudi%20Arabia":return"🇸🇦";case"Indonesia":return"🇮🇩";case"Finland":return"🇫🇮";case"South%20Africa":return"🇿🇦";case"Greece":return"🇬🇷";case"Iceland":return"🇮🇸";case"India":return"🇮🇳";case"Mexico":return"🇲🇽";case"Panama":return"🇵🇦";case"Dominican%20Republic":return"🇩🇴";case"Singapore":return"🇸🇬";case"Peru":return"🇵🇪";case"Argentina":return"🇦🇷";case"Croatia":return"🇭🇷";case"Serbia":return"🇷🇸";case"Slovenia":return"🇸🇮";case"Estonia":return"🇪🇪";case"Diamond%20Princess":return"🚢";case"Colombia":return"🇨🇴";case"Qatar":return"🇶🇦";case"Hong%20Kong":return"🇭🇰";case"UAE":return"🇦🇪";case"Egypt":return"🇪🇬";case"New%20Zealand":return"🇳🇿";case"Algeria":return"🇩🇿";case"Iraq":return"🇮🇶";case"Morocco":return"🇲🇦";case"Bahrain":return"🇧🇭";case"Lithuania":return"🇱🇹";case"Armenia":return"🇦🇲";case"Ukraine":return"🇺🇦";case"Hungary":return"🇭🇺";case"Lebanon":return"🇱🇧";case"Latvia":return"🇱🇻";case"Bosnia%20and%20Herzegovina":return"🇧🇦";case"Slovakia":return"🇸🇰";case"Andorra":return"🇦🇩";case"Costa%20Rica":return"🇨🇷";case"Tunisia":return"🇹🇳";case"Uruguay":return"🇺🇾";case"Taiwan":return"🇹🇼";case"Kazakhstan":return"🇰🇿";case"North%20Macedonia":return"🇲🇰";case"Azerbaijan":return"🇦🇿";case"Kuwait":return"🇰🇼";case"Jordan":return"🇯🇴";case"San%20Marino":return"🇸🇲";case"Cyprus":return"🇨🇾";case"Réunion":return"🇷🇪";case"Albania":return"🇦🇱";case"Burkina%20Faso":return"🇧🇫";case"Vietnam":return"🇻🇳";case"Oman":return"🇴🇲";case"Afghanistan":return"🇦🇫";case"Cuba":return"🇨🇺";case"Faeroe%20Islands":case"Faroe%20Islands":return"🇫🇴";case"Ivory%20Coast":return"🇨🇮";case"Senegal":return"🇸🇳";case"Malta":return"🇲🇹";case"Ghana":return"🇬🇭";case"Belarus":return"🇧🇾";case"Uzbekistan":return"🇺🇿";case"Channel%20Islands":return"&nbsp;&nbsp;&nbsp;&thinsp;";case"Cameroon":return"🇨🇲";case"Honduras":return"🇭🇳";case"Venezuela":return"🇻🇪";case"Mauritius":return"🇲🇺";case"Brunei":return"🇧🇳";case"Sri%20Lanka":return"🇱🇰";case"Palestine":return"🇵🇸";case"Nigeria":return"🇳🇬";case"Cambodia":return"🇰🇭";case"Guadeloupe":return"🇬🇵";case"Georgia":return"🇬🇪";case"Bolivia":return"🇧🇴";case"Kyrgyzstan":return"🇰🇬";case"Martinique":return"🇲🇶";case"Montenegro":return"🇲🇪";case"Trinidad%and%Tobago":return"🇹🇹";case"Mayotte":return"🇾🇹";case"DRC":return"🇨🇩";case"Rwanda":return"🇷🇼";case"Gibraltar":return"🇬🇮";case"Paraguay":return"🇵🇾";case"Liechtenstein":return"🇱🇮";case"Kenya":return"🇰🇪";case"Aruba":return"🇦🇼";case"Bangladesh":return"🇧🇩";case"Isle%20of%20Man":return"🇮🇲";case"Monaco":return"🇲🇨";case"French%20Guiana":return"🇬🇫";case"Madagascar":return"🇲🇬";case"Macao":return"🇲🇴";case"Guatemala":return"🇬🇹";case"Jamaica":return"🇯🇲";case"French%20Polynesia":return"🇵🇫";case"Zambia":return"🇿🇲";case"Barbados":return"🇧🇧";case"Uganda":return"🇺🇬";case"Togo":return"🇹🇬";case"El%20Salvador":return"🇸🇻";case"Mali":return"🇲🇱";case"Ethiopia":return"🇪🇹";case"Niger":return"🇳🇪";case"Bermuda":return"🇧🇲";case"Guinea":return"🇬🇳";case"Congo":return"🇨🇬";case"Tanzania":return"🇹🇿";case"Djibouti":return"🇩🇯";case"Maldives":return"🇲🇻";case"Saint%20Martin":return"🇲🇫";case"Haiti":return"🇭🇹";case"New%20Caledonia":return"🇳🇨";case"Bahamas":return"🇧🇸";case"Myanmar":return"🇲🇲";case"Cayman%20Islands":return"🇰🇾";case"Equatorial%20Guinea":return"🇬🇶";case"Eritrea":return"🇪🇷";case"Mongolia":return"🇲🇳";case"Curaçao":return"🇨🇼";case"Dominica":return"🇩🇲";case"Namibia":return"🇳🇦";case"Greenland":return"🇬🇱";case"Syria":return"🇸🇾";case"Grenada":return"🇬🇩";case"Saint%20Lucia":return"🇱🇨";case"Eswatini":return"🇸🇿";case"Guyana":return"🇬🇾";case"Guinea-Bissau":return"🇬🇼";case"Laos":return"🇱🇦";case"Libya":return"🇱🇾";case"Mozambique":return"🇲🇿";case"Seychelles":return"🇸🇨";case"Suriname":return"🇸🇷";case"Angola":return"🇦🇴";case"Gabon":return"🇬🇦";case"Zimbabwe":return"🇿🇼";case"Antigua%20and%20Barbuda":return"🇦🇬";case"Saint%20Kitts%20and%20Nevis":return"🇰🇳";case"Sudan":return"🇸🇩";case"Cabo%20Verde":case"Cape%20Verde":return"🇨🇻";case"Benin":return"🇧🇯";case"Vatican%20City":return"🇻🇦";case"St.%20Barth":return"🇧🇱";case"Sint%20Maarten":return"🇸🇽";case"Nepal":return"🇳🇵";case"Chad":return"🇹🇩";case"Fiji":return"🇫🇯";case"Mauritania":return"🇲🇷";case"Montserrat":return"🇲🇸";case"Turks%20and%20Caicos":return"🇹🇨";case"Gambia":return"🇬🇲";case"Nicaragua":return"🇳🇮";case"Bhutan":return"🇧🇹";case"Belize":return"🇧🇿";case"CAR":return"🇨🇫";case"Liberia":return"🇱🇷";case"Somalia":return"🇸🇴";case"MS%20Zaandam":return"🚢";case"Anguilla":return"🇦🇮";case"British%20Virgin%20Islands":return"🇻🇬";case"Papua%20New%20Guinea":return"🇵🇬";case"St.%20Vincent%20Grenadines":return"🇻🇨";case"Timor-Leste":return"🇹🇱";case"Botswana":return"🇧🇼"}return"&nbsp;&nbsp;&nbsp;&thinsp;"}localStorageInit(),render_stuff(),document.querySelector("#country-list-choice").addEventListener("change",e=>{let a=document.getElementById("country-list-choice").value;(a=a.split(" ")).shift(),(a=a.join(" "))&&!document.getElementById(escape(a))?(console.log(a+" added."),add_country(a)):document.getElementById(escape(a))&&alert(a+" is already shown."),document.getElementById("country-list-choice").value=""});var isoCountries={AF:"Afghanistan",AX:"Aland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua And Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia And Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:"Cote D'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island & Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic Of",IQ:"Iraq",IE:"Ireland",IM:"Isle Of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States Of",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Réunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthelemy",SH:"Saint Helena",KN:"Saint Kitts And Nevis",LC:"Saint Lucia",MF:"Saint Martin",PM:"Saint Pierre And Miquelon",VC:"Saint Vincent And Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome And Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia And Sandwich Isl.",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard And Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad And Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks And Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis And Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"};function getCountryName(e){return isoCountries.hasOwnProperty(e)?isoCountries[e]:e}